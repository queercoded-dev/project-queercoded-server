---
- name: Prepare the server
  hosts: queercoded
  tasks:
    - name: Add SSH keys to user
      become: true
      ansible.posix.authorized_key:
        user: "{{ queercoded_user }}"
        key: "{{ item }}"
      with_items:
        - "{{ queercoded_ssh_keys }}"

    - name: Check if transactional-update state is present
      become: true
      ansible.builtin.stat:
        path: /var/lib/misc/transactional-update.state
      register: transactional_update_state

    - name: Touch transactional update state
      become: true
      ansible.builtin.file:
        path: /var/lib/misc/transactional-update.state
        state: touch # Needed for Ansible to detect transactional-update is required...
      when: not transactional_update_state.stat.exists

    - name: Install open-isci
      become: true
      community.general.zypper:
        name: open-iscsi
        state: present
        update_cache: true
      notify: Reboot host

    - name: Install disk util dependencies
      become: true
      community.general.zypper:
        name:
          - btrfs-progs
          - parted
          - python310-pexpect
        state: present
        update_cache: true
      notify: Reboot host

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Expand /dev/vda4 partition
      become: true
      ansible.builtin.expect: # parted modue doesn't work properly with mounted filesystems
        command: parted /dev/vda resizepart
        responses:
          'Partition number.*': '4'
          'Fix/Ignore.*': 'Fix'
          'End.*': '100%'
          'Yes/No.*': 'yes'
        echo: true
        timeout: 30

    - name: Resize partition
      become: true
      community.general.filesystem:
        dev: /dev/vda4
        resizefs: true
        fstype: btrfs

  handlers:
    - name: Reboot host
      become: true
      ansible.builtin.reboot:
        reboot_timeout: 600

- name: Install K3S
  hosts: queercoded
  roles:
    - { role: role_k3s, tags: [k3s] }

- name: Set up ArgoCD
  hosts: queercoded
  tasks:
    - name: Delegate to localhost
      delegate_to: localhost
      environment:
        KUBECONFIG: "{{ k3s_kubeconfig_local_dest }}"
      block:
        - name: Create ArgoCD namespace
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: argocd
                labels:
                  name: argocd

        - name: Download ArgoCD manifest
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/argoproj/argo-cd/v2.5.6/manifests/install.yaml
            dest: /tmp/argocd-install.yaml
            mode: '0644'

        - name: Install ArgoCD
          kubernetes.core.k8s:
            state: present
            namespace: argocd
            src: /tmp/argocd-install.yaml

...
